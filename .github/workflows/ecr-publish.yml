name: Deploy to Amazon ECR

on:
  push:
    branches:
      - ecr-deploy

jobs:
  test: 
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase 
        uses: actions/checkout@v2
      
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#          
#      - name: Install dependencies
#        run: mvn install
#
#      - name: Run Verification & Unit Tests 
#        run: mvn --batch-mode verify
#
#      - name: Run Integration Tests  
#        run: mvn --batch-mode test -P integration

  deploy:
    needs: test
    name: Deploy to AWS ECR
    runs-on: ubuntu-latest
#    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Detect new tag version from pom.xml
        id: package-version
        uses: salsify/action-detect-and-tag-new-version@68bbe8670f415d304e02942186441939c4692aa6 # pin@v1.0.3
        with:
          create-tag: false
          version-command: |
            mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -v '\['  

#      ## Build & Deploy Dev
#      - name: Build & Deploy Dev
#        if: contains(github.ref, 'refs/heads/feature/') || github.ref == 'refs/heads/develop'
#        run: |

#      ## Build & Deploy Staging
#      - name: Build & Deploy Staging
#        if: contains(github.ref, 'refs/heads/release/')
#        run: |

#      ## Build & Deploy Production
#      - name: Build & Deploy Production
#        if: github.ref == 'refs/heads/master'
#        run: |

      - name: Build & Deploy ecr-deploy (testing)
        if: github.ref == 'refs/heads/ecr-deploy'
        id: build-image
        env:
          ECR_REPOSITORY: new-qpp-conversion-tool
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: v${{ steps.package-version.outputs.current-version }}
          GITHUB_REF: ${{ github.ref }} 
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest 

#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$latest
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#          echo $ECR_REPOSITORY
#          docker build -t $ECR_REPOSITORY:latest .
#          echo $ECR_REPOSITORY:latest
#          echo $ECR_REGISTRY/$ECR_REPOSITORY
#          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
#          docker rmi $ECR_REGISTRY/$ECR_REPOSITORY:latest
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
#          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  